name: Publish Package

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  publish-npm:
    name: Publish to NPM
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Use Node.js 18.x
      uses: actions/setup-node@v4
      with:
        node-version: 18.x
        registry-url: https://registry.npmjs.org/
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build TypeScript
      run: npm run build
    
    - name: Verify package version matches release tag
      run: |
        PACKAGE_VERSION=$(node -p "require('./package.json').version")
        RELEASE_TAG=${GITHUB_REF#refs/tags/}
        echo "Package version: $PACKAGE_VERSION"
        echo "Release tag: $RELEASE_TAG"
        if [ "v$PACKAGE_VERSION" != "$RELEASE_TAG" ]; then
          echo "Version mismatch: package.json version ($PACKAGE_VERSION) does not match release tag ($RELEASE_TAG)"
          exit 1
        fi
    
    - name: Check if version already exists on NPM
      run: |
        PACKAGE_VERSION=$(node -p "require('./package.json').version")
        echo "Checking if version $PACKAGE_VERSION exists on NPM..."
        if npm view @banana.inc/cacheman-s3@$PACKAGE_VERSION version 2>/dev/null; then
          echo "⚠️ Version $PACKAGE_VERSION already exists on NPM. Skipping publish step."
          echo "SKIP_PUBLISH=true" >> $GITHUB_ENV
        else
          echo "✅ Version $PACKAGE_VERSION is new. Proceeding with publish."
          echo "SKIP_PUBLISH=false" >> $GITHUB_ENV
        fi
        
        # Additional check: if release was created by github-actions bot, skip
        RELEASE_AUTHOR="${{ github.event.release.author.login }}"
        if [ "$RELEASE_AUTHOR" = "github-actions[bot]" ]; then
          echo "⚠️ Release was created by auto-release workflow. Skipping duplicate publish."
          echo "SKIP_PUBLISH=true" >> $GITHUB_ENV
        fi
    
    - name: Publish to NPM
      run: npm publish
      if: env.SKIP_PUBLISH == 'false'
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
    
    - name: Verify publication
      run: |
        PACKAGE_VERSION=$(node -p "require('./package.json').version")
        echo "Waiting for package to be available on NPM..."
        sleep 30
        npm view @banana.inc/cacheman-s3@$PACKAGE_VERSION
        echo "Package successfully published to NPM"
      if: env.SKIP_PUBLISH == 'false'

  notify-success:
    name: Notify Success
    needs: [publish-npm]
    runs-on: ubuntu-latest
    if: success()
    
    steps:
    - name: Get package info
      run: |
        echo "PACKAGE_VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV
        echo "PACKAGE_NAME=@banana.inc/cacheman-s3" >> $GITHUB_ENV
    
    - name: Create success summary
      run: |
        cat > $GITHUB_STEP_SUMMARY << EOF
        # ✅ Package Published Successfully
        
        **Package:** \`${{ env.PACKAGE_NAME }}\`  
        **Version:** \`${{ env.PACKAGE_VERSION }}\`  
        **Release:** [${{ github.ref_name }}](${{ github.server_url }}/${{ github.repository }}/releases/tag/${{ github.ref_name }})
        
        ## 📦 Published to:
        - **NPM Registry:** [npmjs.com/package/${{ env.PACKAGE_NAME }}](https://www.npmjs.com/package/${{ env.PACKAGE_NAME }})
        
        ## 🔧 Installation:
        \`\`\`bash
        npm install ${{ env.PACKAGE_NAME }}@${{ env.PACKAGE_VERSION }}
        \`\`\`
        
        ## ⚡ Usage:
        \`\`\`typescript
        import { S3Store } from '${{ env.PACKAGE_NAME }}';
        
        const cache = new S3Store({
          bucket: 'your-s3-bucket'
        });
        \`\`\`
        EOF
    
  notify-failure:
    name: Notify Failure
    needs: [publish-npm]
    runs-on: ubuntu-latest
    if: failure()
    
    steps:
    - name: Create failure summary
      run: |
        cat > $GITHUB_STEP_SUMMARY << EOF
        # ❌ Package Publication Failed
        
        **Package:** \`cacheman-s3\`  
        **Version:** \`${GITHUB_REF#refs/tags/v}\`  
        **Release:** [${{ github.ref_name }}](${{ github.server_url }}/${{ github.repository }}/releases/tag/${{ github.ref_name }})
        
        ## 🔍 Check the following:
        - [ ] NPM authentication token (\`NPM_TOKEN\` secret)
        - [ ] Package version conflicts
        - [ ] Build artifacts generation
        - [ ] Test results
        
        Please review the [failed workflow run](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}) for details.
        EOF